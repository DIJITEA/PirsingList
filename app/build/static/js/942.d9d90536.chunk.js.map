{"version":3,"file":"static/js/942.d9d90536.chunk.js","mappings":"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","sources":["user.InterfaceLayer/Libraries/main.library/src/constants/colors/index.ts","user.InterfaceLayer/Libraries/main.library/src/constants/fonts/index.ts","user.InterfaceLayer/Libraries/main.library/src/UI_KIT/Atoms/Input.atom/styled.tsx/index.tsx","user.InterfaceLayer/Libraries/main.library/src/UI_KIT/Atoms/Input.atom/index.tsx","user.InterfaceLayer/Libraries/main.library/src/UI_KIT/Atoms/Button.atom/styled/index.tsx","user.InterfaceLayer/Libraries/main.library/src/UI_KIT/Atoms/Button.atom/index.tsx","user.InterfaceLayer/Libraries/main.library/src/UI_KIT/Molecules/AuthToken.molecule/styled/index.tsx","user.InterfaceLayer/Libraries/main.library/src/UI_KIT/Molecules/AuthToken.molecule/index.tsx","user.InterfaceLayer/Libraries/main.library/src/Widgets/AuthToken.widget/styled/index.tsx","user.InterfaceLayer/Libraries/main.library/src/UI_KIT/Molecules/Profuct.molecule/index.tsx","user.InterfaceLayer/Libraries/main.library/src/Widgets/AuthToken.widget/modules/Products.module/index.tsx","user.InterfaceLayer/Libraries/main.library/src/Widgets/AuthToken.widget/index.tsx","user.InterfaceLayer/Components/ComponentsBll/AuthTokenComponent/index.tsx","user.InterfaceLayer/Libraries/main.library/src/Widgets/widget1.widget/index.tsx","user.InterfaceLayer/Components/ComponentsBll/Component1.bll/index.tsx","user.InterfaceLayer/Pages/Main.page/ui/MainPage.tsx"],"sourcesContent":["enum Colors {\r\n\tWHITE = \"#FFFFFF\",\r\n\tBLACK = \"#000000\",\r\n\tBUTTON_DISABLED_BG = \"#f9f9f9\",\r\n\tBUTTON_DISABLED_TEXT = \"#acacac\",\r\n\tTRANSPARENT = \"transparent\",\r\n\tORANGE_DEFAULT = \"#FF7020\",\r\n\tORANGE_HOVER = \"#FFAB08\",\r\n\tORANGE_ACTIVE = \"#F86310\",\r\n\tWHITE_DEFAULT = \"#F2F2F3\",\r\n\tGRAY=\"#B1B1B1\",\r\n\tDARKGRAY=\"#202124\"\r\n}\r\n\r\nexport default Colors;\r\n","enum FontsEnum {\r\n\tNunito = \"Nunito\",\r\n}\r\n\r\nexport default FontsEnum;\r\n","import styled from \"styled-components\";\nimport Colors from \"../../../../constants/colors\";\nimport FontsEnum from \"../../../../constants/fonts\";\n\nconst font = `\n\tfont-family: ${FontsEnum.Nunito};\n\tfont-size: 32px;\n\tfont-style: normal;\n\tfont-weight: 400;\n\tline-height: 100%;\n    `;\n\nexport const StyledInput = styled.input`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 90%;\n\theight: 50px;\n\tcolor: white;\n\tbackground-color: ${Colors.DARKGRAY};\n\tborder: 2px solid ${Colors.GRAY};\n\tmargin-bottom: 15px;\n\t${font};\n`;\n","import React from \"react\";\nimport { StyledInput } from \"./styled.tsx\";\nimport { IInput } from \"./type/index.js\";\n\nconst Input = ({getInput} : IInput) =>{\n    return (\n        <StyledInput onChange={(e)=>getInput(e.target.value)}></StyledInput>\n    )\n}\n\nexport default Input","import styled from \"styled-components\";\nimport Colors from \"../../../../constants/colors\";\nimport FontsEnum from \"../../../../constants/fonts\";\n\nconst font = `\n\tfont-family: ${FontsEnum.Nunito};\n\tfont-size: 32px;\n\tfont-style: normal;\n\tfont-weight: 400;\n\tline-height: 100%;\n`;\n\nexport const StyledButton = styled.button`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: calc(90% + 4px);\n\theight: 50px;\n\tcolor: white;\n\tbackground-color: ${Colors.DARKGRAY};\n\tborder: 2px solid ${Colors.GRAY};\n\t${font};\n`;\n","import React from \"react\";\nimport { StyledButton } from \"./styled\";\n\nimport { IButton } from \"./type\";\n\nconst Button = ({ src, srcFunc }: IButton) => {\n\treturn <StyledButton onClick={srcFunc}>{src}</StyledButton>;\n};\n\nexport default Button;\n","import styled from \"styled-components\";\n\nexport const StyledAuthToken = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 100%;\n\theight: 100%;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport Input from \"../../Atoms/Input.atom\";\nimport Button from \"../../Atoms/Button.atom\";\nimport { StyledAuthToken } from \"./styled\";\nimport { IAuthToken } from \"../../../Widgets/AuthToken.widget/type\";\nimport { IAuth } from \"./type\";\n\nconst AuthToken = ({ apiAdminKey, setApiAdminKey }: IAuth) => {\n\tconst [fullKey, setFullKey] = useState(\"\");\n\n\tconst addKey = () => {\n\t\tlocalStorage.setItem(\"apiAdminKey\", fullKey);\n\t\tsetApiAdminKey(fullKey);\n\t};\n\n\treturn (\n\t\t<StyledAuthToken>\n\t\t\t<Input getInput={setFullKey} />\n\t\t\t<Button\n\t\t\t\tsrc={\"enter key\"}\n\t\t\t\tsrcFunc={addKey}\n\t\t\t/>\n\t\t</StyledAuthToken>\n\t);\n};\n\nexport default AuthToken;\n","import Styled, { styled } from \"styled-components\";\n\ninterface IAuthTokenWrap {\n\t$active: boolean;\n}\n\nexport const AuthTokenWrap = styled.div<IAuthTokenWrap>`\n\tposition: fixed;\n\ttop: 0px;\n\theight: 100vh;\n\twidth: 100vw;\n\tbackdrop-filter: blur(2px);\n\t${(props) => (props.$active ? `` : `display: none`)}\n`;\n","import React from \"react\";\ninterface temp {\n\tsrc: { color: string; count: number; mm: number; steel: string };\n}\nconst Product = ({ src }: temp) => {\n\treturn (\n\t\t<div>\n\t\t\t<div>{src.color}</div>\n\t\t\t<div>{src.count}</div>\n\t\t\t<div>{src.mm}</div>\n\t\t\t<div>{src.steel}</div>\n\t\t</div>\n\t);\n};\nexport default Product;\n","import React from \"react\";\nimport Product from \"../../../../UI_KIT/Molecules/Profuct.molecule\";\n\ninterface IProducts {\n\tproducts: Array<{\n\t\tcollection: Array<{\n\t\t\tcolor: string;\n\t\t\tcount: number;\n\t\t\tmm: number;\n\t\t\tsteel: string;\n\t\t}>;\n\t\tname: string;\n\t}>;\n}\n\nconst Products = ({ products }: IProducts) => {\n\tconsole.log(products);\n\treturn (\n\t\t<>\n\t\t\t{products.map((item, i) => (\n\t\t\t\t<div key={i}>\n\t\t\t\t\t<h2>{item.name}</h2>\n\t\t\t\t\t{item.collection.map((item, i) => {\n\t\t\t\t\t\treturn <Product key={i} src={item} />;\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</>\n\t);\n};\n\nexport default Products;\n\n","import React, { useEffect, useState } from \"react\";\nimport Input from \"../../UI_KIT/Atoms/Input.atom\";\nimport AuthToken from \"../../UI_KIT/Molecules/AuthToken.molecule\";\n\nimport { AuthTokenWrap } from \"./styled\";\nimport { IAuthToken } from \"./type\";\nimport Product from \"../../UI_KIT/Molecules/Profuct.molecule\";\nimport Products from \"./modules/Products.module\";\n\nconst AuthTokenWidget = ({ useLazyGetPirsingQuery }: IAuthToken) => {\n\tconst [apiAdminKey, setApiAdminKey] = useState(\"\");\n\tconst [activeInput, setActiveInput] = useState(true);\n\n\tconst [trigger, data, isLoading, error] = useLazyGetPirsingQuery({});\n\n\tuseEffect(() => {\n\t\tif (data.status === \"fulfilled\") {\n\t\t\tconsole.log(data.data.record.collection[0].name);\n\t\t\t// console.log(src)\n\t\t\tsetActiveInput(false);\n\t\t}\n\t}, [data]);\n\tuseEffect(() => {\n\t\tconst reportapiAdminKeyInStorage = localStorage.getItem(\"apiAdminKey\");\n\t\tif (reportapiAdminKeyInStorage !== null) {\n\t\t\tsetApiAdminKey(reportapiAdminKeyInStorage);\n\t\t\ttrigger({ authToken: reportapiAdminKeyInStorage });\n\t\t}\n\t}, [apiAdminKey]);\n\n\treturn (\n\t\t<>\n\t\t\t<AuthTokenWrap $active={activeInput}>\n\t\t\t\t<AuthToken\n\t\t\t\t\tapiAdminKey={apiAdminKey}\n\t\t\t\t\tsetApiAdminKey={setApiAdminKey}\n\t\t\t\t/>\n\t\t\t</AuthTokenWrap>\n\t\t\t{data.status === \"fulfilled\"? <Products products={data.data.record.collection}/>:<div></div>}\n\t\t\n\t\t</>\n\t);\n};\n\nexport default AuthTokenWidget;\n","import React from \"react\";\n\nimport {\n\tuseGetTodoQuery,\n\tuseLazyGetTodoQuery,\n} from \"../../../../business.InterfaceLayer/store/shared/entities/svyatoslavZhilin.entities/todo.entity/redux/api\";\nimport {\n\tuseGetPirsingQuery, useLazyGetPirsingQuery,\n\t// usePostPirsingMutation,\n} from \"business.InterfaceLayer/store/shared/entities/pirsing/pirsing.entity/redux/api\";\nimport Widget1 from \"../../../Libraries/main.library/src/Widgets/widget1.widget\";\nimport AuthTokenWidget from \"user.InterfaceLayer/Libraries/main.library/src/Widgets/AuthToken.widget\";\n\nconst AuthTokenComponent = () => {\n\treturn <AuthTokenWidget useLazyGetPirsingQuery={useLazyGetPirsingQuery}/>;\n};\n\nexport default AuthTokenComponent;\n","import React, { FunctionComponent } from \"react\";\r\n\r\n// import {Icons , Icon } from \"../../UI_KIT/Atoms/Atom1.atom/icons\";\r\nimport Widget1Type from \"./type\";\r\n\r\nconst Widget1: FunctionComponent<Widget1Type> = ({ useGetTodoQuery }) => {\r\n\tconst { data } = useGetTodoQuery({ authToken: \"\", params: { id: \"1\" } });\r\n\r\n\treturn <div>data from jsonplaceholder : {JSON.stringify(data)}\r\n\t\t{/* <Icon width={20} height={20} color=\"#FAFAFA\" icon={Icons.House}  /> */}\r\n\t</div>;\r\n};\r\n\r\nexport default Widget1;\r\n","import React from \"react\";\r\n\r\nimport {\r\n\tuseGetTodoQuery,\r\n\tuseLazyGetTodoQuery,\r\n} from \"../../../../business.InterfaceLayer/store/shared/entities/svyatoslavZhilin.entities/todo.entity/redux/api\";\r\nimport Widget1 from \"../../../Libraries/main.library/src/Widgets/widget1.widget\";\r\n\r\nconst Component1 = () => {\r\n\treturn (\r\n\t\t<Widget1\r\n\t\t\tuseGetTodoQuery={useGetTodoQuery}\r\n\t\t\tuseLazyGetTodoQuery={useLazyGetTodoQuery}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default Component1;\r\n","import {\r\n\tuseGetPirsingQuery,\r\n\t// usePostPirsingMutation,\r\n} from \"business.InterfaceLayer/store/shared/entities/pirsing/pirsing.entity/redux/api\";\r\nimport React, { FC, useEffect } from \"react\";\r\nimport AuthTokenComponent from \"user.InterfaceLayer/Components/ComponentsBll/AuthTokenComponent\";\r\nimport Component1 from \"user.InterfaceLayer/Components/ComponentsBll/Component1.bll\";\r\n\r\n// import { Cells1.cell } from \"test-lib\";\r\n\r\nconst MainPage: FC = () => {\r\n\t// useEffect(()=>{postPirsing({payload:{\"sample\": \"Hello World\"}}).then()},[])\r\n\r\n\t// eslint-disable-next-line no-console\r\n\t// console.log(Cells1.cell);\r\n\t// const { data, isLoading } = useGetPirsingQuery({\r\n\t// \tauthToken: \"$2b$10$/jFJNILkprdkVAWtsRvvuOadcU926APvycdu1VkWcZRE61g.qbJcq\",\r\n\t// });\r\n\r\n\t// const postPirsing = usePostPirsingMutation();\r\n\t// const [postPirsing,{isLoading: PostPirsingmutatiOnLoading, isError: PostPirsingmutatiIsError}] = usePostPirsingMutation()\r\n\t// const test = async () => {\r\n\t// \t// postPirsing({payload:{\"sample\": \"Hello World2\"}}).then(console.log)\r\n\r\n\t// \tawait fetch(\"https://api.jsonbin.io/v3/b/64de4b6e9d312622a392b4a4\", {\r\n\t// \t\tmethod: \"PUT\",\r\n\t// \t\theaders: {\r\n\t// \t\t\t\"x-access-key\":\r\n\t// \t\t\t\t\"$2b$10$/jFJNILkprdkVAWtsRvvuOadcU926APvycdu1VkWcZRE61g.qbJcq\",\r\n\t// \t\t\t\"Content-Type\": \"application/json\",\r\n\t// \t\t},\r\n\t// \t\tbody: `{\r\n\t// \t\t\t\"banana\": {\r\n\t// \t\t\t  \"name\": \"Банан\",\r\n\t// \t\t\t  \"collection\": [\r\n\t// \t\t\t\t{\r\n\t// \t\t\t\t  \"steel\": \"тип стали\",\r\n\t// \t\t\t\t  \"mm\": 7,\r\n\t// \t\t\t\t  \"color\": \"цвет\",\r\n\t// \t\t\t\t  \"count\": 0\r\n\t// \t\t\t\t}\r\n\t// \t\t\t  ]\r\n\t// \t\t\t},\r\n\t// \t\t\t\"labret\": {\r\n\t// \t\t\t  \"name\": \"Лабрет\",\r\n\t// \t\t\t  \"collection\": [\r\n\t// \t\t\t\t{\r\n\t// \t\t\t\t  \"steel\": \"тип стали\",\r\n\t// \t\t\t\t  \"mm\": 7,\r\n\t// \t\t\t\t  \"color\": \"цвет\",\r\n\t// \t\t\t\t  \"count\": 0\r\n\t// \t\t\t\t}\r\n\t// \t\t\t  ]\r\n\t// \t\t\t},\r\n\t// \t\t\t\"Ring\": {\r\n\t// \t\t\t  \"name\": \"Кольцо\",\r\n\t// \t\t\t  \"collection\": [\r\n\t// \t\t\t\t{\r\n\t// \t\t\t\t  \"steel\": \"тип стали\",\r\n\t// \t\t\t\t  \"mm\": 7,\r\n\t// \t\t\t\t  \"color\": \"цвет\",\r\n\t// \t\t\t\t  \"count\": 0\r\n\t// \t\t\t\t}\r\n\t// \t\t\t  ]\r\n\t// \t\t\t},\r\n\t// \t\t\t\"Circular\": {\r\n\t// \t\t\t  \"name\": \"Циркуляр\",\r\n\t// \t\t\t  \"collection\": [\r\n\t// \t\t\t\t{\r\n\t// \t\t\t\t  \"steel\": \"тип стали\",\r\n\t// \t\t\t\t  \"mm\": 7,\r\n\t// \t\t\t\t  \"color\": \"цвет\",\r\n\t// \t\t\t\t  \"count\": 0\r\n\t// \t\t\t\t}\r\n\t// \t\t\t  ]\r\n\t// \t\t\t},\r\n\t// \t\t\t\"Barbell\": {\r\n\t// \t\t\t  \"name\": \"Штанга\",\r\n\t// \t\t\t  \"collection\": [\r\n\t// \t\t\t\t{\r\n\t// \t\t\t\t  \"steel\": \"тип стали\",\r\n\t// \t\t\t\t  \"mm\": 7,\r\n\t// \t\t\t\t  \"color\": \"цвет\",\r\n\t// \t\t\t\t  \"count\": 0\r\n\t// \t\t\t\t}\r\n\t// \t\t\t  ]\r\n\t// \t\t\t},\r\n\t// \t\t\t\"Nostril\": {\r\n\t// \t\t\t  \"name\": \"Нострил\",\r\n\t// \t\t\t  \"collection\": [\r\n\t// \t\t\t\t{\r\n\t// \t\t\t\t  \"steel\": \"тип стали\",\r\n\t// \t\t\t\t  \"mm\": 7,\r\n\t// \t\t\t\t  \"color\": \"цвет\",\r\n\t// \t\t\t\t  \"count\": 0\r\n\t// \t\t\t\t}\r\n\t// \t\t\t  ]\r\n\t// \t\t\t}\r\n\t// \t\t  }`,\r\n\t// \t}).then(console.log);\r\n\t// };\r\n\r\n\t// let req = new XMLHttpRequest();\r\n\r\n\t// req.onreadystatechange = () => {\r\n\t//   if (req.readyState == XMLHttpRequest.DONE) {\r\n\t// \tconsole.log(req.responseText);\r\n\t//   }\r\n\t// };\r\n\r\n\t// req.open(\"POST\", \"https://api.jsonbin.io/v3/b\", true);\r\n\t// req.setRequestHeader(\"Content-Type\", \"application/json\");\r\n\t// req.setRequestHeader(\"X-Master-Key\", \"$2b$10$uQ86lHM4rIy1ahSNa1a6f.2b5lmr5mxHvVIbEvxDB7cwOGqX/9MMO\");\r\n\t// req.send('{\"sample\": \"Hello World\"}');\r\n\r\n\t// console.log(data);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{/* <button onClick={test}>asdasd</button> */}\r\n\t\t\t{/* <div>{data}</div> */}\r\n\t\t\tTEST5 <Component1 />\r\n\t\t\t<AuthTokenComponent/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MainPage;\r\n"],"names":["Colors","FontsEnum","font","concat","Nunito","StyledInput","styled","input","_templateObject","_taggedTemplateLiteral","DARKGRAY","GRAY","_ref","getInput","_jsx","onChange","e","target","value","StyledButton","button","src","srcFunc","onClick","children","StyledAuthToken","div","apiAdminKey","setApiAdminKey","_useState","useState","_useState2","_slicedToArray","fullKey","setFullKey","_jsxs","Input","Button","localStorage","setItem","AuthTokenWrap","props","$active","color","count","mm","steel","products","console","log","_Fragment","map","item","i","name","collection","Product","useLazyGetPirsingQuery","_useState3","_useState4","activeInput","setActiveInput","_useLazyGetPirsingQue","_useLazyGetPirsingQue2","trigger","data","useEffect","status","record","reportapiAdminKeyInStorage","getItem","authToken","AuthToken","Products","AuthTokenWidget","useGetTodoQuery","params","id","JSON","stringify","Widget1","useLazyGetTodoQuery","Component1","AuthTokenComponent"],"sourceRoot":""}